## Functions that cache the inverse of a matrix.
## Assume that the Maxtrix supplied is always invertible


## This function creates a special matrix object that can cache its inverse.

MakeCacheMatrix <- function(x = matrix()) {
        
        xinverse <- NULL
        set <- function(y) {
                x <<- y
                xinverse <<- NULL
        }
        
        get <- function() x
        setinverse <- function(inverse) xinverse <<- inverse 
        getinverse <- function() xinverse

        list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}


## This function computes the inverse of the special "matrix" returned by makeCacheMatrix above.

Cachesolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
        
        xinverse <- x$getinverse()
        
        if (!is.null(xinverse)) {
                message("getting cached data......hold on")
                
                return(xinverse)
        } 
        
        data <- x$get()
        xinverse <- solve(data)
        x$setinverse(xinverse)
        xinverse
}
